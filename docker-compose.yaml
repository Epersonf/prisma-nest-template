version: '3.8' # Specify the docker-compose version

services:
  # NestJS Application Service
  app:
    container_name: nest_app # Name for the container
    build: . # Build the Docker image from the Dockerfile in the current directory
    ports:
      - "3000:3000" # Map host port 3000 to container port 3000
      - "9229:9229" # Map host port 9229 to container port 9229
    volumes:
      # Mounts the project directory into the container for development
      # Excludes node_modules to use the container's version
      - .:/usr/src/app
      - /usr/src/app/node_modules
    # Environment variables needed by the NestJS app
    environment:
      # Constructs the database URL using values from the db service
      # Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE
      DATABASE_URL: postgresql://myuser:mypassword@db:5432/mydatabase
      # NODE_ENV: development # Optional: set node environment
    # Command to run the application (adjust if you use a different start script)
    command: sh -c "npm i && npx prisma generate && npx prisma db push && npm run start:dev"
    # Depends on the db service to ensure it starts first
    depends_on:
      - db
    networks:
      - nestapp-network # Use a custom network

  # PostgreSQL Database Service
  db:
    container_name: postgres_db # Name for the container
    image: postgres:15 # Use the official PostgreSQL image (version 15)
    environment:
      # Define PostgreSQL credentials and database name
      POSTGRES_USER: myuser        # Replace with your desired username
      POSTGRES_PASSWORD: mypassword  # Replace with your desired password
      POSTGRES_DB: mydatabase      # Replace with your desired database name
    ports:
      # Optionally map the host port 5432 to the container port 5432
      # Usually not needed unless you want to connect from your host machine directly
      - "5432:5432"
    volumes:
      # Persist database data using a named volume
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nestapp-network # Use the same custom network

# Define Networks
networks:
  nestapp-network:
    driver: bridge # Use the bridge driver for networking

# Define Volumes
volumes:
  postgres_data: # Named volume for PostgreSQL data persistence